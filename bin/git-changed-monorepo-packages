#!/usr/bin/env node

const process = require("node:process");
const { runCommand } = require("../shared/__shared");
const { getProcessOptions } = require("../shared/__cli");

const USAGE = `
    Usage: git changed-monorepo-packages [--oneline]

    Examples:

        $ git changed-monorepo-packages
        $ git changed-monorepo-packages --oneline
`;

const GIT_DIFF_BRANCH = `git diff main.. --name-only`;
const PACKAGES_PATH = /^packages\//;
const PACKAGE_NAME = /^packages\/([\w-]*)\/(.*)$/;

async function collectChangedPackages() {
  const diff = await runCommand(GIT_DIFF_BRANCH);
  const changedFiles = diff.split("\n");
  const onlyPackagesFiles = changedFiles.filter((x) => PACKAGES_PATH.test(x));
  const packages = onlyPackagesFiles.reduce((list, filename) => {
    const matched = filename.match(PACKAGE_NAME);
    if (Array.isArray(matched)) {
      const packageName = matched[1];
      list.add(packageName);
    }
    return list;
  }, new Set());
  return packages;
}

function displayOnelineResults(packages) {
  console.log([...packages].join(" "));
}

function displayRegularList(packages) {
  console.log("List of packages with changed files:\n");
  packages.forEach((name) => {
    console.log(`- ${name}`);
  });
}

function displayResults(options, packages) {
  if (options.oneline) {
    displayOnelineResults(packages);
  } else {
    displayRegularList(packages);
  }
}

async function main() {
  const options = getProcessOptions(process.argv);
  if (options.help) {
    console.log(USAGE);
    return void process.exit(1);
  }
  const packages = await collectChangedPackages();

  displayResults(options, packages);
}

main().catch(console.error);
